name: Fork Sync via GitHub App Template

on:
  workflow_call:
    inputs:
      upstream_repo:
        required: true
        type: string
      upstream_branch:
        required: true
        type: string
      fork_branch:
        required: true
        type: string
      sync_branch:
        required: false
        type: string
        default: fork-sync-gha

    secrets:
      GH_APP_ID:
        required: true
      GH_APP_PRIVATE_KEY:
        required: true

jobs:
  Fork-Sync-Template:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Generate GitHub App Token
        id: create_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Checkout fork repo
        uses: actions/checkout@v4
        with:
          token: ${{ steps.create_token.outputs.token }}
          fetch-depth: 0

      - name: Add upstream remote
        run: |
          git remote add upstream https://x-access-token:${{ steps.create_token.outputs.token }}@github.com/${{ inputs.upstream_repo }}.git

      - name: Fetch upstream changes
        run: git fetch upstream ${{ inputs.upstream_branch }}

      - name: Create sync branch excluding workflows
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      
          # Create sync branch from fork base
          git checkout -B ${{ inputs.sync_branch }} origin/${{ inputs.fork_branch }}
      
          # Merge upstream branch (preserve history)
          git merge --no-commit --no-ff upstream/${{ inputs.upstream_branch }} || true
      
          # Detect if there are *non-workflow* conflicts. If yes, abort.
          conflicted_files=$(git diff --name-only --diff-filter=U | grep -v '^.github/workflows/' || true)
          if [[ -n "$conflicted_files" ]]; then
            echo "‚ùå Merge conflict in non-workflow files:"
            echo "$conflicted_files"
            exit 1
          fi
      
          # Resolve ALL workflow-related conflicts by keeping fork‚Äôs version (or deletion if deleted in fork)
          for file in $(git diff --name-only --diff-filter=U | grep '^.github/workflows/' || true); do
            if [[ -f "$file" ]]; then
              echo "Keeping fork's version of $file"
              git checkout --ours "$file"
              git add "$file"
            else
              echo "File $file deleted in fork; keeping it deleted"
              git rm -f "$file"
            fi
          done
      
          # Final cleanup: unstaged/untracked workflow files
          git restore --staged .github/workflows/ || true
          git restore .github/workflows/ || true
          git clean -fd .github/workflows/ || true
      
          # Commit only if there are staged changes
          if ! git diff --cached --quiet; then
            git commit -m "üîÑ Sync fork with upstream ${{ inputs.upstream_repo }}:${{ inputs.upstream_branch }} ü§ñ (excluding workflows)"
          else
            echo "No changes to commit"
          fi
      
          git push -f origin ${{ inputs.sync_branch }}

      - name: Create Pull Request to sync fork
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ steps.create_token.outputs.token }}
          commit-message: "üîÑ Sync fork with upstream: ${{ inputs.upstream_repo }}:${{ inputs.upstream_branch }} ü§ñ"
          title: "üîÑ Sync fork with upstream: ${{ inputs.upstream_repo }}:${{ inputs.upstream_branch }} ü§ñ"
          body: |
            This pull request was automatically generated by a bot to keep this fork up to date with upstream changes.
          base: ${{ inputs.fork_branch }}
          branch: ${{ inputs.sync_branch }}
          author: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
          committer: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
